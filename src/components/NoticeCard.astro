---
const { icon, title, body } = Astro.props;
---

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Encode+Sans&amp;display=swap">

<style>

  .notice-card {
    position: fixed;
    top: 10px;
    right: 25px;
    z-index: 999;
    width: 325px;
    padding: 5px 10px 5px 10px;
    background-image: linear-gradient(to bottom right, #ffffff, #d4d4d4);
    border-radius: 3px;
    box-shadow: 6px 6px 6px rgba(0, 0, 0, 0.1);
    text-align: left;
    font-size: 14px;
    display: flex;
    flex-direction: column;
  }

  @media (max-width: 590px) {
    .notice-card {
        display: none;
    }
  }

  .notice-card-header {
    display: flex;
    align-items: center;
    text-align: left;
    justify-content: space-between;
    color: dimgray;
    width: 100%;
  }

  .notice-card-title {
    text-align: left;
    font-family: 'Encode Sans Expanded', sans-serif;
    font-size: 16px;
    font-weight: 700;
    line-height: 25.5px;
    margin-right: 117.667px;
    pointer-events: auto;
    text-align: start
  }

  .notice-card-icon {
    text-align: right;
    font-size: 20px;
  }

  .notice-card-content {
    flex-grow: 1;
    margin-top: 0px;
    font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    font-size: 12px;
    font-weight: 400;
    line-height: 15px;
    margin-bottom: 0px;
    margin-top: 0px;
    overflow-wrap: break-word;
    pointer-events: auto;
    text-align: start
  }

  .fancy {
    margin: 5px -10px 2px -10px;
    padding-left: 0px;
    padding-top: 0px;
    padding-right: 0px;
    padding-bottom: 2px;
    background-image: linear-gradient(to right, #602fbb, #df0170);
    background-position: bottom;
  }

  .dismiss-button {
    align-self: flex-end;
    border: none;
    cursor: pointer;
    margin-right: -5px;
    margin-bottom: -5px;
    font-size: 25px;
    text-decoration: none;
    color: dimgray;
    -webkit-background-clip: text;
  }


</style>
<notice-card class="notice-card">
    <div class="notice-card-header">
        <span class="notice-card-title">{title}</span>
        <i class={`notice-card-icon ${icon}`}></i>
    </div>
    <div class="fancy"></div>
    <div class="notice-card-content">
        <p>{body}</p>
    </div>
    <button tooltip="Dismiss notice" class="dismiss-button bi bi-check-lg"></button>
</notice-card>

<script>

  class NoticeCard extends HTMLElement {
    constructor() {
      super();

      const button = this.querySelector('button');

      /** Set the theme to dark/light mode. */
      const setTheme = () => {
        document.querySelector('.notice-card').style.display = 'none';
        setCookie("dismissed","yes",7);
      };

      function setCookie(cname, cvalue, exdays) {
        const d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        let expires = "expires="+d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
      }

      function getCookie(cname) {
        let name = cname + "=";
        let ca = document.cookie.split(';');
        for(let i = 0; i < ca.length; i++) {
          let c = ca[i];
          while (c.charAt(0) == ' ') {
            c = c.substring(1);
          }
          if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
          }
        }
        return "";
      }

      function checkCookie() {
        let user = getCookie("dismissed");
        if (user != "") {
          return true;
        } else {
          return false;
        }
      } 
      // Toggle the theme when a user clicks the button.
      button.addEventListener('click', () => setTheme());
    }
  }
  customElements.define('notice-card', NoticeCard);
</script>
